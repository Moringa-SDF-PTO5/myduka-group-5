"""Recreate missing revision

Revision ID: 74c3c5b930c1
Revises: 
Create Date: 2024-07-27 14:59:04.386460

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '74c3c5b930c1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('invitations', schema=None) as batch_op:
        batch_op.add_column(
            sa.Column('Invitation_id', sa.Integer(), nullable=False))
        batch_op.alter_column('token',
                              existing_type=sa.VARCHAR(length=64),
                              type_=sa.String(length=50),
                              existing_nullable=False)
        batch_op.alter_column('email',
                              existing_type=sa.VARCHAR(length=120),
                              type_=sa.String(length=50),
                              existing_nullable=False)
        batch_op.alter_column('created_at',
                              existing_type=postgresql.TIMESTAMP(),
                              nullable=False)
        batch_op.alter_column('is_used',
                              existing_type=sa.BOOLEAN(),
                              type_=sa.String(length=1),
                              nullable=False)
        batch_op.drop_column('invitation_id')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(
            sa.Column('is_active', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('confirmed_admin',
                            sa.Boolean(), nullable=True))
        batch_op.alter_column('username',
                              existing_type=sa.VARCHAR(length=64),
                              type_=sa.String(length=50),
                              existing_nullable=False)
        batch_op.alter_column('role',
                              existing_type=sa.VARCHAR(length=50),
                              nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('role',
                              existing_type=sa.VARCHAR(length=50),
                              nullable=False)
        batch_op.alter_column('username',
                              existing_type=sa.String(length=50),
                              type_=sa.VARCHAR(length=64),
                              existing_nullable=False)
        batch_op.drop_column('confirmed_admin')
        batch_op.drop_column('is_active')

    with op.batch_alter_table('invitations', schema=None) as batch_op:
        batch_op.add_column(
            sa.Column('invitation_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.alter_column('is_used',
                              existing_type=sa.String(length=1),
                              type_=sa.BOOLEAN(),
                              nullable=True)
        batch_op.alter_column('created_at',
                              existing_type=postgresql.TIMESTAMP(),
                              nullable=True)
        batch_op.alter_column('email',
                              existing_type=sa.String(length=50),
                              type_=sa.VARCHAR(length=120),
                              existing_nullable=False)
        batch_op.alter_column('token',
                              existing_type=sa.String(length=50),
                              type_=sa.VARCHAR(length=64),
                              existing_nullable=False)
        batch_op.drop_column('Invitation_id')

    # ### end Alembic commands ###
